name: Linting, testing, coverage, and release

on:
  push:
    branches:
    - 'master'

jobs:
    test_old_versions:
        name: ${{ matrix.os.name }} ${{ matrix.python-version }}
        runs-on: ${{ matrix.os.runs-on }}
        strategy:
            matrix:
                python-version: [ 2.7, 3.5, 3.6 ]
                os:
                    -   name: Linux
                        runs-on: ubuntu-20.04
                        python_platform: linux
                    -   name: Windows
                        runs-on: windows-latest
                        python_platform: win32
                    -   name: macOS
                        runs-on: macos-latest
                        python_platform: darwin
        steps:
        -   uses: actions/checkout@v3
        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
                architecture: x64
        -   name: install_dependencies
            run: |
                python -m pip install -U pip
                python -m pip install -U setuptools wheel
        -   name: install_dependencies
            run: |
                python -m pip install -r requirements.txt
            if: matrix.python-version != '2.7'
        -   name: install_dependencies (2.7)
            run: |
                python -m pip install -r requirements-2-7.txt
            if: matrix.python-version == '2.7'
        -   name: Test with unittest
            run: |
                python setup.py test
    test:
        name: ${{ matrix.os.name }} ${{ matrix.python-version }}
        runs-on: ${{ matrix.os.runs-on }}
        strategy:
            matrix:
                python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
                os:
                    -   name: Linux
                        runs-on: ubuntu-latest
                        python_platform: linux
                    -   name: Windows
                        runs-on: windows-latest
                        python_platform: win32
                    -   name: macOS
                        runs-on: macos-latest
                        python_platform: darwin
        steps:
            -   uses: actions/checkout@v3
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v4
                with:
                    python-version: ${{ matrix.python-version }}
                    architecture: x64
            -   name: install_dependencies
                run: |
                    python -m pip install -U pip
                    python -m pip install -U setuptools wheel
                    python -m pip install -r requirements.txt
            -   name: Test with unittest
                run: |
                    python setup.py test

            -   name: Lint with flake8
                run: |
                    pip install flake8
                    flake8 . --count --select=$(printf '%s,' {A..Z}) --ignore='W503,E203' --show-source --max-complexity=13 --max-line-length=119 --statistics
                if: matrix.python-version == '3.8' && matrix.os.name == 'Linux' && github.ref == 'refs/heads/master'
            -   name: Check formatted with black
                run: |
                    pip install black
                    python -m black . --check --extend-exclude 'cdd/tests/mocks/cstify.py'
                if: matrix.python-version == '3.8' && matrix.os.name == 'Linux' && github.ref == 'refs/heads/master'
            -   name: Test coverage
                run: |
                    python -m pip install codecov coverage
                    coverage run -m unittest discover
                    env
                    bash <(curl --proto '=https' --tlsv1.2 -sSf https://codecov.io/bash)
                env:
                    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                if: matrix.python-version == '3.8' && matrix.os.name == 'Linux' && github.ref == 'refs/heads/master'
